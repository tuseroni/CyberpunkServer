//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CyberpunkServer.Models.DTO
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    public interface iAddPrograms
    {
        string UUID { get;}
        string name { get; set; }
        bool addProgram(ProgramData program);
        bool addProgram(List<ProgramData> programs);
	}
    public partial class PlayerCyberdeckData: iAddPrograms
	{
        public PlayerCyberdeckData()
        {
            this.PlayerCyberdeckImprovements = new List<PlayerCyberdeckImprovementsData>();
            this.PlayerCyberdeckOptions = new List<PlayerCyberdeckOptionsData>();
            this.PlayerCyberdeckPrograms = new List<PlayerCyberdeckProgramsData>();
        }

        public int id { get; set; }
        public string name { get; set; }
        public Nullable<int> CyberdeckID { get; set; }
        public Nullable<int> PlayerID { get; set; }
        public string description { get; set; }
        
        public Dictionary<string, int> Improvements { get; set; }
        public int TotalMemory
        {
            get
            {
                var totalMemory = Cyberdeck?.Memory ?? 0;
                if(Improvements.ContainsKey("Memory"))
                {
                    totalMemory += Improvements["Memory"];
                }
                return totalMemory;
            }
        }
        public int TotalSpeed
        {
            get
            {
                var totalSpeed = Cyberdeck?.Speed ?? 0;
                if (Improvements.ContainsKey("Speed"))
                {
                    totalSpeed += Improvements["Speed"];
                }
                return totalSpeed;
            }
            set
            {

            }
        }
        public int TotalMemoryCost
        {
            get
            {
                return Convert.ToInt32(PlayerCyberdeckPrograms.Sum(x => x.MU ));
            }
        }
        public bool addProgram(ProgramData program )
        {
			var newprog = new PlayerCyberdeckProgramsData
			{
				Program = program,
				ProgramID = program.id,
				Strength = program.Strength,
				Rezzed = false,
				PlayerCyberdeckID = id
			};
			PlayerCyberdeckPrograms.Add(newprog);
			return true;
        }
        public bool addProgram(List<ProgramData> programs)
        {
            foreach(var program in programs)
            {
				addProgram(program);
            }
            return true;
        }
        public virtual CyberdeckData Cyberdeck { get; set; }
        public virtual List<PlayerCyberdeckOptionsData> PlayerCyberdeckOptions { get; set; }
        public virtual List<PlayerCyberdeckImprovementsData> PlayerCyberdeckImprovements { get; set; }
        public virtual List<PlayerCyberdeckProgramsData> PlayerCyberdeckPrograms { get; set; }
        Guid _uuid = Guid.NewGuid();
        public string UUID 
        {
            get
            {
                return _uuid.ToString();
            }
        }
	}
}
