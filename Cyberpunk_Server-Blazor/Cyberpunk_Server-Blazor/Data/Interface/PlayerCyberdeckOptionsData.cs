//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;

namespace CyberpunkServer.Models.DTO
{
    public partial class PlayerCyberdeckOptionsData :iConvert
    {
        public static ICollection<CyberpunkServer.Models.PlayerCyberdeckOptions> CopyProperties(ICollection<PlayerCyberdeckOptionsData> orig, ICollection<CyberpunkServer.Models.PlayerCyberdeckOptions> dest, CyberpunkEntities db)
        {
            if (orig.Any())
            {
                Dictionary<int, CyberpunkServer.Models.PlayerCyberdeckOptions> dictionary1 = new Dictionary<int, CyberpunkServer.Models.PlayerCyberdeckOptions>();
                Dictionary<int, PlayerCyberdeckOptionsData> dictionary2 = new Dictionary<int, PlayerCyberdeckOptionsData>();
                if (dest.Any())
                {
                    foreach (var obj in dest)
                        dictionary1.Add(obj.id, obj);
                }
                foreach (var orig1 in orig)
                {
                    if (dictionary1.ContainsKey(orig1.id))
                    {
                        var dest1 = dictionary1[orig1.id];
                        PlayerCyberdeckOptionsData.CopyProperties(orig1, dest1, db);
                    }
                    else
                    {
                        var dest2 = new Models.PlayerCyberdeckOptions();
                        dest.Add(PlayerCyberdeckOptionsData.CopyProperties(orig1, dest2, db));
                    }
                    if (orig1.id != 0)
                    {
                        dictionary2.Add(orig1.id, orig1);
                    }
                }
                foreach (KeyValuePair<int, Models.PlayerCyberdeckOptions> keyValuePair in dictionary1)
                {
                    if (!dictionary2.ContainsKey(keyValuePair.Key))
                        dest.Remove(keyValuePair.Value);
                }
            }
            else if (dest != null && !orig.Any<PlayerCyberdeckOptionsData>())
                dest.Clear();
            return dest;
        }
        public static explicit operator PlayerCyberdeckOptionsData(CyberpunkServer.Models.PlayerCyberdeckOptions PlayerCyberdeckOptions)
        {
            var ret = Converter<PlayerCyberdeckOptionsData, Models.PlayerCyberdeckOptions>.ConvertType(PlayerCyberdeckOptions, new PlayerCyberdeckOptionsData());
            return ret;
        }

        public static List<PlayerCyberdeckOptionsData> ConvertList(ICollection<CyberpunkServer.Models.PlayerCyberdeckOptions> origs)
        {

            var ret = Converter<PlayerCyberdeckOptionsData, PlayerCyberdeckOptions>.ConvertList(origs);
            return ret;
        }

        public static CyberpunkServer.Models.PlayerCyberdeckOptions CopyProperties(PlayerCyberdeckOptionsData PlayerCyberdeckOptions, Models.PlayerCyberdeckOptions dest, CyberpunkEntities db)
        {
            Converter<PlayerCyberdeckOptionsData, PlayerCyberdeckOptions>.ConvertType<PlayerCyberdeckOptionsData>(PlayerCyberdeckOptions, dest, "CopyProperties");
            return dest;
        }


    }
}