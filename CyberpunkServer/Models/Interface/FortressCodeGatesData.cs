//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CyberpunkServer.Models.DTO
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Data.Entity;
    public partial class FortressCodeGatesData
    {
        public static ICollection<FortressCodeGatesData> ConvertList(ICollection<CyberpunkServer.Models.FortressCodeGates> origs)
        {
            var ret = new HashSet<FortressCodeGatesData>();
            foreach (var orig in origs)
            {
                var dest = new FortressCodeGatesData();
                dest.xPos = orig.xPos;
                dest.yPos = orig.yPos;
                dest.FortressID = orig.FortressID;
                dest.id = orig.id;
                dest.Type = orig.Type;
                dest.WallStrength = orig.WallStrength;
                dest.NetObjType = (NetObjTypeData)orig.NetObjType;
                ret.Add(dest);
            }
            return ret;
        }
        public static ICollection<CyberpunkServer.Models.FortressCodeGates> CopyProperties(ICollection<FortressCodeGatesData> orig, ICollection<CyberpunkServer.Models.FortressCodeGates> dest, CyberpunkEntities db)
        {
            if (orig.Any())
            {
                Dictionary<int, CyberpunkServer.Models.FortressCodeGates> dictionary1 = new Dictionary<int, CyberpunkServer.Models.FortressCodeGates>();
                Dictionary<int, FortressCodeGatesData> dictionary2 = new Dictionary<int, FortressCodeGatesData>();
                if (dest.Any())
                {
                    foreach (var obj in dest)
                        dictionary1.Add(obj.id, obj);
                }
                foreach (var orig1 in orig)
                {
                    if (dictionary1.ContainsKey(orig1.id))
                    {
                        var dest1 = dictionary1[orig1.id];
                        FortressCodeGatesData.CopyProperties(orig1, dest1, db);
                    }
                    else
                    {
                        var dest2 = new Models.FortressCodeGates();
                        dest.Add(FortressCodeGatesData.CopyProperties(orig1, dest2, db));
                    }
                    dictionary2.Add(orig1.id, orig1);
                }
                foreach (KeyValuePair<int, Models.FortressCodeGates> keyValuePair in dictionary1)
                {
                    if (!dictionary2.ContainsKey(keyValuePair.Key))
                        dest.Remove(keyValuePair.Value);
                }
            }
            else if (dest != null && !orig.Any<FortressCodeGatesData>())
                dest.Clear();
            return dest;
        }
        public static CyberpunkServer.Models.FortressCodeGates CopyProperties(FortressCodeGatesData orig, CyberpunkServer.Models.FortressCodeGates dest, CyberpunkEntities db)
        {
            dest.xPos = orig.xPos;
            dest.yPos = orig.yPos;
            dest.FortressID = orig.FortressID;
            dest.id = orig.id;
            dest.Type = orig.Type;
            dest.WallStrength = orig.WallStrength;
            return null;
        }

    }
}
